

Regra regex é um padrão feito com o intuito de ser um mecanismo de busca por caracteres.

Por exemplo o abecedario:
ABCDEFGHIJKLMNOPQRSTUVWXYZ

Em que posição está a letra D?
Na quarta

Como fariamos em um javascript normal sem uso do regex para achar isso?
var abecedario = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
console.log(abecedario.search("D")) // 4

Agora com regra regex:
console.log(abecedario.search(/D/)) // 4

O que estiver entre barra barra // é considerado como para ser usado a regra regex

Ambos retornam a mesma coisa, só que de maneiras diferentes. Se é a mesma coisa então para que utilizar isso?

Pensemos na seguinte situação: você quer ver se dentro de uma string existe somente números.

Obs: não sei se existe uma outra forma de fazer esse sistema, mas seria da seguinte forma que eu faria se não tivesse regex.

var texto_qualquer = "Abacaxi não f4z x123"
var verificar_texto = texto_qualquer
for (var x = 0; x < 10; x++) {
    while (verificar_texto.search(x) != -1) {
        verificar_texto.replace(x, "")
    }
}
if (verificar_texto.length != 0) {
    console.log("Não há somente números em " + texto_qualquer)
} else {
    console.log("Há somente números em " + texto_qualquer)
}

E isso foi porque queriamos ver se só tinha número, imagina se quiséssemos ver se só tinha letra, teríamos que criar vários while ou usar a tabela ASCII, ia ser bem longo as linha de código, já com regex evitamos todo esse percurso.

var texto_qualquer = "Abacaxi não f4z x123"
if (texto_qualquer.search(/[^0-9]/) != -1) {
    console.log("Não há somente números em " + texto_qualquer)
} else {
    console.log("Há somente números em " + texto_qualquer)
}

Não se preocupe quanto a essa parte cheia de símbolos "/[^0-9]/" isso é a mesma coisa que falar: "procure em texto_qualquer um caracter que esteja fora do intervalo de 0 à 9"

Se é encontrado algo na busca, seria retornado a sua posição e se não for encontrado é retornado -1




--------------------------------------------------------




Agora que foi visto para que usamos regex, vamos ver seu pontecial, até onde se abrange suas pesquisas e como funcionam:



-----------------------------------------------------------




Para ativar a possibilidade de uso do regex escreva // e o que estiver entre essas barras será formatado para uso regex. Ou use o construtor:
let regra_reg = new RegExp("")



Quando simplesmente tacamos um valor dentro, no texto é selecionado a primeira aparição
Texto: "Texto para teste do regex"
Regex: /e/
É feito a procura do primeiro indício da palavra "e", logo, aqui ele seleciona a segunda posição

Texto: "Texto para teste do regex"
Regex: / par/
É feito a procura do primeiro indício da palavra " par", logo, aqui ele seleciona a quinta posição esse espaço avulço é considerado parte da busca.

Texto: "Texto para teste do regex"
Regex: /a par/
É feito a procura do primeiro indício da palavra "a par", logo, aqui ele seleciona nada, pois não foi achado um valor correspondente.

Texto: "Texto para teste do regex"
Regex: /ra te/
É feito a procura do primeiro indício da palavra "ra te", logo, aqui ele seleciona a oitava posição







Caso queira colocar um símbolo, que normalmente o regex interpetraria como filtro

Texto: "Texto / para teste do regex"
Regex: /to \/ pa/
É feito a procura do primeiro indício da palavra "to / pa"

Texto: "Texto /\\ para teste do regex"
Regex: /to \/\\ pa/
É feito a procura do primeiro indício da palavra "to /\ pa"





















RegExp é usado principalmente em 2 métodos de string o search() e o replace()


código: /w3schools/
Leitura literal de código: Procure pelo primeiro índice que aparecer pelo nome de "w3schools"
Observação: o que for escrito dentro das barras será a string que será procurada


texto: "O W3schools me ensinou que, bla bla palavra w3schools de novo lorem com o w minúsculo."
código: /w3schools/i
Leitura literal de código: Procure pela primeira palavra w3schools que aparecer, sem levar em consideração letras minúsculas ou maiúsculas
Palavras que tbm seriam achadas com o código escrito: w3schools, W3schools, w3SChoOlS, ...
Observação: o i ao final do entre barras é quem dá a ordem de procurar a palavra que está escrita sem distinguir a formatação do caractere


texto: "O w3schools me ensinou que, bla bla palavra w3schools de novo lorem."
código: /w3schools/g
Leitura literal de código: Procure por TODAS as palavras w3schools que aparecerem
Observação: o g ao final do entre barras é quem dá a ordem de buscar todos os índices que atendem à string informada


texto: "Olá mundo"
código: /[bmag]/
Leitura literal de código: Procure pelos caracteres informados aqui dentro, ache no texto a letra b, m, a ou g
Observação: O que estiver entre colchetes será o caracter que será buscado, neste exemplo será analisado



códigos combinando com o que foi visto até aqui:
"Olá mundo! Hello World! Olá."
/Ol[aáAÁ] mundo/
/[o]/i
/ol/ig
/ol[aá]/i



texto: "Olá mundo"
código: /[a-m]/
Leitura literal de código: Ache o primeiro índice de um caracter que esteja entre a e m, logo as letras procuradas são: a, b, c, d, e, f, g, h, i, j, k, l e m.
Observação: Se dentro do colchetes tivermos um sinal de menos entre dois caracteres é feita uma busca de um caracter até o outro, temos as seguintes tabelas de pesquisas:
[a-z] abcdefghijklmnopqrstuvwxyz
[A-Z] ABCDEFGHIJKLMNOPQRSTUVWXYZ
[0-9] 0123456789
Usos do código de forma alternativa
[a-zA-Z] abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
[TEa-z01] TEabcdefghijklmnopqrstuvwxyz01
[ ] - Procura literalmente por um espaço -



Texto: "re, green, red, green, gren, gr, blue, yellow"
código: /(red|green)/
Leitura literal de código: ache a string "red" ou "green"
Outras formas de se escrever esse código para buscar no texto exemplo:
/(red|green|blue)/
/(red|green|gr)/


código: /\d/
Leitura literal de código: Ache um dígito

código: /\s/
Leitura literal de código: Ache um espaço em branco

código: /\btes/
Leitura literal de código: Ache uma palavra que inicie pela string "tes"

código: /te\b/
Leitura literal de código: Ache uma palavra que termine pela string "te"

@@@@@ código: /\u/
@@@@@ Leitura literal de código: Ache um dígito

código: /o+/g
Leitura literal de código: Ache a letra "o" e todos os seus conjuntos em que se repete
texto: "Hellooo World! Hello W3Schools!"
resultados: ooo,o,o,oo

código: /lo*/g
Leitura literal de código: Ache a string "l" com a quantidade de "o"s opcional
texto: "Hellooo World! Hello W3Schools!"
resultados: l,looo,l,l,lo,l

código: /10?1/g
Leitura literal de código: Ache uma string "1" onde a próxima letra "0" é opcional para a busca. Vamos procurar por 11 e por 101.
texto: "11, 111, 121 or 1010?"
resultados: 11,11,101
















































